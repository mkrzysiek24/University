#lang plait

;(('a -> 'b) 'a -> 'b)
( define ( apply f x) (f x))

;(('a -> 'b) ('c -> 'a) -> ('c -> 'b))
;(('b -> 'c) ('a -> 'b) -> ('a -> 'c))
( define ( compose f g) ( lambda (x) (f (g x))))

;(('a 'b -> 'c) -> ('b 'a -> 'c))
( define ( flip f) ( lambda (x y) (f y x)))

;(('a 'b -> 'c) -> ('a -> ('b -> 'c)))
( define ( curry f) ( lambda (x) ( lambda (y) (f x y))))